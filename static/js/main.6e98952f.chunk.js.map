{"version":3,"sources":["components/Header.jsx","context/AppReducer.jsx","context/GlobalState.jsx","components/Balance.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","components/AddTransaction.jsx","containers/App.jsx","index.jsx"],"names":["Header","className","AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","num","p","toFixed","split","reverse","i","orig","moneyFormatter","IncomeExpenses","amounts","income","expense","Transaction","sign","text","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","Math","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e98952f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <h2 className='titlecard'>\r\n      AR's Budget Tracker App\r\n    </h2>\r\n  )\r\n}","export default function AppReducer (state, action) {\r\n  switch(action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n      }\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  transactions: []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction\r\n    });\r\n  }\r\n\r\n  return (<GlobalContext.Provider value={{\r\n    transactions: state.transactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n  }}>\r\n    {children}\r\n  </GlobalContext.Provider>);\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n//Money formatter function\r\nfunction moneyFormatter(num) {\r\n  let p = num.toFixed(2).split('.');\r\n  return (\r\n    '$ ' + (p[0].split('')[0]=== '-' ? '-' : '') +\r\n    p[0]\r\n      .split('')\r\n      .reverse()\r\n      .reduce(function (acc, num, i, orig) {\r\n        return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\r\n      }, '') +\r\n    '.' +\r\n    p[1]\r\n  );\r\n}\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0);\r\n\r\n  return (\r\n    <div className='balance'>\r\n      <h4>Your Balance</h4>\r\n      <h1>{moneyFormatter(total)}</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n//Money formatter function\r\nfunction moneyFormatter(num) {\r\n  let p = num.toFixed(2).split('.');\r\n  return (\r\n    '$ ' +\r\n    p[0]\r\n      .split('')\r\n      .reverse()\r\n      .reduce(function (acc, num, i, orig) {\r\n        return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\r\n      }, '') +\r\n    '.' +\r\n    p[1]\r\n  );\r\n}\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  );\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n  <p className=\"money plus\">{moneyFormatter(income)}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n  <p className=\"money minus\">{moneyFormatter(expense)}</p>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n//Money formatter function\r\nfunction moneyFormatter(num) {\r\n  let p = num.toFixed(2).split('.');\r\n  return (\r\n    '$ ' +\r\n    p[0]\r\n      .split('')\r\n      .reverse()\r\n      .reduce(function (acc, num, i, orig) {\r\n        return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\r\n      }, '') +\r\n    '.' +\r\n    p[1]\r\n  );\r\n}\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n      {transaction.text} <span>{sign}{moneyFormatter(transaction.amount)}</span><button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n    </li>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Transaction } from './Transaction';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount\r\n    }\r\n\r\n    addTransaction(newTransaction);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3>Add A New Transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter Name...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Amount <br />\r\n            (Negative for an expense | Positive for an income)</label\r\n          >\r\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter Amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add Transaction</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Header } from '../components/Header';\r\nimport { Balance } from '../components/Balance';\r\nimport { IncomeExpenses } from '../components/IncomeExpenses';\r\nimport { TransactionList } from '../components/TransactionList';\r\nimport { AddTransaction } from '../components/AddTransaction';\r\n\r\nimport { GlobalProvider } from '../context/GlobalState';\r\n\r\nimport '../css/style.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <Balance />\r\n        <IncomeExpenses />\r\n        <TransactionList />\r\n        <AddTransaction />\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}